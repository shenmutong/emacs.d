;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(calc-read-var-name-history bookmark-history regexp-search-ring extended-command-history w3m-input-url-history shell-command-history gud-gdb-history ido-buffer-history file-name-history query-replace-history minibuffer-history ido-file-history))
(setq calc-read-var-name-history '("q1"))
(setq regexp-search-ring '("syswronghand" "onelinescanfinish" "systemlog" "ShowNormalDetResu" "shownormald" "LoadConf" "getRa" "pol" "EngineCloseFinish" "slot_engine" "slot_onelinescanfinish" "_slot_onelinescanfinish" "slot_SysWrongHandle" "SysWrongHandlse" "bizlogicengine_startbizlogicengine"))
(setq w3m-input-url-history '("http://doc.qt.io/qt-5/qtest.html" "http://www.zhihu.com"))
(setq shell-command-history '("find . -name '*.[ch]' | xargs etags -a" "find -name '*.[ch]' | xargs etags -a" "rm -rf TAGS " "rm -rf TAGS" " find . -name '*.[ch]' | xargs etags -a" "rm rf TAGS" "rm -rf .#ffmpeg.c " "find . -name \"*.cpp\" -print -o -name \"*.h\" -print | etags -  " "etags *.[ch]"))
(setq gud-gdb-history '("gdb -i=mi tst_bsguiuinttsttest.cpp"))
(setq ido-buffer-history '("*Calculator*" "c.el.gz" "*Messages*" "*scratch*" "*clang-error*" "tst_bsguiuinttsttest.cpp" "*helm semantic/imenu*" "*Completions*" "wmcoldiagraph.cpp" "wmcoldiagraph.h" "posix_qextserialport.cpp" "mainwindow.h" "readme.docx" "showspectrogram.cpp" "WMMacrodefinitionSys.h" "WMBizLogicEngine.cpp" "PROBLEMS" "BSGuiUintTst" "*clang-output*" "init.el" "mainwindow.cpp" "*Ibuffer*" "tst_bsguiuinttsttest.h" "WMEngineManager.cpp" "*Kill Ring*" "shenmutong" #("BlueSolution.pro" 0 16 (face ido-virtual)) "SoftWareDepartment" ".emacs.d" "WorkSpace" "BlueSolutionProject" "window.el.gz" "*Help*" "ns-win.el.gz" "DefaultKeyBinding.dict" "*shell*" "*ggtags-global*" "*w3m*" "QtNewFunctionAdd" nil "init-cc-mode.el" "*gud-tst_bsguiuinttsttest.cpp*"))
(setq file-name-history '("~/WorkSpace/SoftWareDepartment/BlueSolutionProject/BlueSolutionSDK/BlueSolutionSDK/WMBSSystemVar.h" "/Applications/Emacs.app/Contents/Resources/etc/NEWS" "~/WorkSpace/SoftWareDepartment/BlueSolutionProject/BlueSolutionSDK/BlueSolutionSDK/WMSysWrongHandle.h" "~/WorkSpace/SoftWareDepartment/BlueSolutionProject/BlueSolutionSDK/BlueSolutionSDK/WMSysWrongHandle.cpp" "~/WorkSpace/SoftWareDepartment/BlueSolutionProject/UintTest/BSGuiUintTst/tst_bsguiuinttsttest.h" "/Applications/Emacs.app/Contents/Resources/lisp/cedet/semantic/bovine/c.el.gz" "/usr/src/Qt5.5.0/TAGS" "~/WorkSpace/SoftWareDepartment/BlueSolutionProject/BSUI_CE/BSUI_CE/mainwindow.cpp" "~/WorkSpace/SoftWareDepartment/BlueSolutionProject/UintTest/BSGuiUintTst/tst_bsguiuinttsttest.cpp" "~/.emacs.d/init.el" "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/sys/cdefs.h" "/Users/shenmutong/.emacs.d/init.el" "/Users/shenmutong/WorkSpace/SoftWareDepartment/BlueSolutionProject/UintTest/BSGuiUintTst/tst_bsguiuinttsttest.cpp" "/Users/shenmutong/WorkSpace/SoftWareDepartment/BlueSolutionProject/BSUI_CE/BSUI_CE/mainwindow.cpp" "~/WorkSpace/SoftWareDepartment/BlueSolutionProject/WMiaoLib/WMGraphCtrl/WMGraphCtrlSDK/wmcoldiagraph.cpp" "~/WorkSpace/SoftWareDepartment/BlueSolutionProject/BlueSolutionSDK/BlueSolutionSDK/WMEngineManager.cpp" "~/WorkSpace/SoftWareDepartment/BlueSolutionProject/WMiaoLib/WMGraphCtrl/WMGraphCtrlSDK/wmcoldiagraph.h" "~/WorkSpace/SoftWareDepartment/BlueSolutionProject/WMiaoLib/WMEngineFrameSDK/WMEngineFrameSDK/posix_qextserialport.cpp" "~/WorkSpace/SoftWareDepartment/BlueSolutionProject/BSUI_CE/BSUI_CE/mainwindow.h" "~/WorkSpace/SoftWareDepartment/BlueSolutionProject/readme.docx" "~/WorkSpace/SoftWareDepartment/BlueSolutionProject/BSUI_CE/BSUI_CE/showspectrogram.cpp" "~/WorkSpace/SoftWareDepartment/BlueSolutionProject/WMiaoLib/WMBaseClassSDK/WMBaseClassSDK/WMMacrodefinitionSys.h" "~/WorkSpace/SoftWareDepartment/BlueSolutionProject/BlueSolutionSDK/BlueSolutionSDK/WMBizLogicEngine.cpp" "/Applications/Emacs.app/Contents/Resources/etc/PROBLEMS" "/Users/shenmutong/WorkSpace/SoftWareDepartment/BlueSolutionProject/readme.docx" "~/WorkSpace/SoftWareDepartment/BlueSolutionProject/BlueSolution.pro" "/Applications/Emacs.app/Contents/Resources/lisp/window.el.gz" "/Applications/Emacs.app/Contents/Resources/lisp/term/ns-win.el.gz"))
(setq query-replace-history '("" "_"))
(setq minibuffer-history '("calculator-digit" "calculator-mode" "calculator" "calc" "c++-mode" "semantic-mode" "desktop-save-in-desktop-dir" "helm-semantic-or-imenu" "flymake-mode" "direx:find-directory" "direx:jump-to-directory" "lisp-mode" "fundamental-mode" "bmkp-bmenu-mark-variable-list-bookmarks" "csv-nav-mode" "shell" "dired" "speedbar" "visit-tags-table" "ggtags-delete-tags" "tags-reset-tags-tables" "delete-file" "ggtags-create-tags" "company-etags" "m_pHtDiagraphValuetemp" "helm-find" "84743687@qq.com" "www.heiyan.com" "w3m-browse-url" "w3m" "yas/reload-all" "desktop-save" "forward-symbol" "move-beginning-of-line" "recover-file" "http://doc.qt.io/qt-5/qtest.html#QTEST_MAIN" "company-semantic" "ggtags-update-tags" "ggtags-mode" "StopHSDet" "ggtags-reload" "ggtags-find-other-symbol" "register_exit" "main" "yas/new-snippet" "gdb" "\\_<caseaddh\\_>" "shell-mode" "replace-string" "goto-line430"))
(setq ido-file-history '("init.el" "tst_bsguiuinttsttest.cpp" "mainwindow.cpp" "." "readme.docx" "KeyBindings/" "TAGS" "QtNewFunctionAdd" ".emacs.desktop" "task.org" "tst_bsguiuinttsttest.h" "UintTest/" nil "cl-lib.el" "init-cc-mode.el" "ido.last" "recentf" "init-emacs-w3m.el" "mainwindow.h" "ffmpeg.c" "QtUintTestAddNewTestCase1" "QtUintTestAddNewTestCase2" "QtUintTestAddNewTestCase" "UintTestPlan.org" "DesignDocuments" "BSUintTest/" "note.org" "finished.org" "task.html" "config" "HigerMathematics.org" ".gitconfig" ".zshrc" "TestRec.org" "WorkFlow.txt"))
(setq search-ring 'nil)
(setq regexp-search-ring '("syswronghand" "onelinescanfinish" "systemlog" "ShowNormalDetResu" "shownormald" "LoadConf" "getRa" "pol" "EngineCloseFinish" "slot_engine" "slot_onelinescanfinish" "_slot_onelinescanfinish" "slot_SysWrongHandle" "SysWrongHandlse" "bizlogicengine_startbizlogicengine"))
(setq kill-ring '(#("  /*
" 0 2 (c-in-sws t c-is-sws t fontified t) 2 3 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 3 4 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 4 5 (fontified t)) #("*/" 0 1 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1 2 (face font-lock-comment-delimiter-face fontified t c-in-sws t rear-nonsticky t)) #("(BS_WMSystemVar.m_DetectMode" 0 28 (fontified t)) #("    
" 0 4 (fontified t) 4 5 (fontified t)) #("QTest::newRow(QString(\"%1\").arg(i))<< i << <<2;" 0 5 (face font-lock-constant-face fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 12 (face font-lock-variable-name-face fontified t) 12 13 (face font-lock-variable-name-face fontified t) 13 14 (c-type c-decl-arg-start fontified t) 14 21 (fontified t) 21 22 (fontified t) 22 25 (face font-lock-string-face fontified t) 25 26 (face font-lock-string-face fontified t) 26 28 (fontified t) 28 31 (fontified t) 31 32 (c-type c-decl-arg-start fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 46 (fontified t) 46 47 (fontified t rear-nonsticky t)) #("QTest::newRow(QString(\"%1\").arg(i))<< i << <<1;" 0 5 (face font-lock-constant-face fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 12 (face font-lock-variable-name-face fontified t) 12 13 (face font-lock-variable-name-face fontified t) 13 14 (c-type c-decl-arg-start fontified t) 14 21 (fontified t) 21 22 (fontified t) 22 25 (face font-lock-string-face fontified t) 25 26 (face font-lock-string-face fontified t) 26 28 (fontified t) 28 31 (fontified t) 31 32 (c-type c-decl-arg-start fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 46 (fontified t) 46 47 (c-type c-decl-id-start fontified t rear-nonsticky t)) #("QTest::newRow(QString(\"%1\").arg(i))<< i << <<0;" 0 5 (face font-lock-constant-face fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 12 (face font-lock-variable-name-face fontified t) 12 13 (face font-lock-variable-name-face fontified t) 13 14 (c-type c-decl-arg-start fontified t) 14 21 (fontified t) 21 22 (fontified t) 22 25 (face font-lock-string-face fontified t) 25 26 (face font-lock-string-face fontified t) 26 28 (fontified t) 28 31 (fontified t) 31 32 (c-type c-decl-arg-start fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 46 (fontified t) 46 47 (c-type c-decl-id-start fontified t)) #("slot_OneLineScanFinish" 0 22 (face font-lock-function-name-face fontified t)) #("QTest::newRow(QString(\"%1\").arg(i))<< i << <<0;" 0 5 (face font-lock-constant-face fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 12 (face font-lock-variable-name-face fontified t) 12 13 (face font-lock-variable-name-face fontified t) 13 14 (c-type c-decl-arg-start fontified t) 14 21 (fontified t) 21 22 (fontified t) 22 25 (face font-lock-string-face fontified t) 25 26 (face font-lock-string-face fontified t) 26 28 (fontified t) 28 31 (fontified t) 31 32 (c-type c-decl-arg-start fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 47 (fontified t)) #("QTest::addColumn<>" 0 5 (face font-lock-constant-face fontified t) 5 7 (fontified t) 7 16 (face font-lock-type-face fontified t) 16 17 (category c-<-as-paren-syntax fontified t) 17 18 (c-type c-decl-id-start category c->-as-paren-syntax fontified t)) #("void initTestCase_" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t) 4 5 (fontified t) 5 18 (face font-lock-variable-name-face fontified t)) #("OneLineScanFinish" 0 17 (face font-lock-variable-name-face fontified t)) #("*/" 0 2 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) #("*/" 0 1 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 1 2 (c-in-sws t face font-lock-comment-delimiter-face rear-nonsticky t fontified t)) #("*/" 0 2 (c-in-sws t face font-lock-comment-delimiter-face fontified t)) #("OneLineScanFinish" 0 17 (face font-lock-variable-name-face fontified t)) #("slot_OneLineScanFinish" 0 22 (face font-lock-variable-name-face fontified t)) #("_slot_OneLineScanFinish" 0 23 (face font-lock-variable-name-face fontified t)) #("slot_SysWrongHandle" 0 19 (face font-lock-variable-name-face fontified t)) #(" */" 0 1 (c-in-sws t face font-lock-comment-face fontified t) 1 2 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 2 3 (c-in-sws t face font-lock-comment-delimiter-face fontified t rear-nonsticky t)) #(" */" 0 1 (c-in-sws t face font-lock-comment-face fontified t) 1 2 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 2 3 (c-in-sws t face font-lock-comment-delimiter-face fontified t rear-nonsticky t)) #("bizLogicEngine_startBizLogicEngine" 0 34 (face font-lock-variable-name-face fontified t)) #(" */" 0 1 (c-in-sws t face font-lock-comment-face fontified t) 1 2 (c-in-sws t face font-lock-comment-delimiter-face fontified t) 2 3 (c-in-sws t face font-lock-comment-delimiter-face fontified t rear-nonsticky t)) #("*/" 0 1 (face font-lock-comment-delimiter-face fontified t c-in-sws t) 1 2 (face font-lock-comment-delimiter-face fontified t c-in-sws t rear-nonsticky t)) #("  */" 0 2 (face font-lock-comment-face fontified t c-in-sws t) 2 4 (face font-lock-comment-delimiter-face fontified t c-in-sws t)) #("   
" 0 3 (fontified t) 3 4 (fontified t)) #("void MainWindow::xu" 0 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face c-type c-decl-id-start fontified t) 4 5 (fontified t) 5 15 (face font-lock-constant-face fontified t) 15 17 (fontified t) 17 19 (face font-lock-function-name-face fontified t)) #("    ui->label_SystemInfo->setText(qsShowInf);" 0 45 (fontified t)) #("RefreshCurrentSystemStatus(int iSystemStatus)" 0 26 (face font-lock-function-name-face fontified t) 26 27 (c-type c-decl-arg-start fontified t) 27 30 (face font-lock-type-face fontified t) 30 31 (fontified t) 31 44 (face font-lock-variable-name-face fontified t) 44 45 (fontified t)) #("QTest::newRow(\"SystemStatus_Unknown\")<< -1 <<  \"未知系统状态\";" 0 1 (face font-lock-constant-face fontified t) 1 5 (face font-lock-constant-face fontified t) 5 7 (fontified t) 7 13 (fontified t) 13 14 (fontified t) 14 15 (face font-lock-string-face fontified t) 15 16 (face font-lock-string-face fontified t) 16 17 (face font-lock-string-face fontified t) 17 18 (face font-lock-string-face fontified t) 18 19 (face font-lock-string-face fontified t) 19 20 (face font-lock-string-face fontified t) 20 21 (face font-lock-string-face fontified t) 21 22 (face font-lock-string-face fontified t) 22 34 (face font-lock-string-face fontified t) 34 35 (face font-lock-string-face fontified t) 35 36 (face font-lock-string-face fontified t) 36 37 (fontified t rear-nonsticky t) 37 46 (fontified t) 46 47 (fontified t) 47 54 (face font-lock-string-face fontified t) 54 55 (face font-lock-string-face rear-nonsticky t fontified t) 55 56 (rear-nonsticky t fontified t)) #(" \"未知系统状态\"" 0 1 (fontified t) 1 9 (face font-lock-string-face fontified t)) #("\"系统空闲\";" 0 5 (face font-lock-string-face fontified t) 5 6 (face font-lock-string-face fontified t rear-nonsticky t) 6 7 (fontified t rear-nonsticky t)) #(" \"系统空闲\";" 0 1 (fontified t) 1 6 (face font-lock-string-face fontified t) 6 7 (face font-lock-string-face fontified t rear-nonsticky t) 7 8 (rear-nonsticky t fontified t)) #(" \"正在清洗\"" 0 1 (c-in-sws t fontified t) 1 7 (face font-lock-string-face c-in-sws t fontified t)) #(" SystemStatus_Clean" 0 19 (fontified t)) #("QTest::newRow(\"SystemStatus_Idle\")<< 4 <<  \"系统空闲\";" 0 1 (face font-lock-constant-face fontified t) 1 5 (face font-lock-constant-face fontified t) 5 7 (fontified t) 7 13 (fontified t) 13 14 (fontified t) 14 15 (face font-lock-string-face fontified t) 15 31 (face font-lock-string-face fontified t) 31 32 (face font-lock-string-face rear-nonsticky t fontified t) 32 33 (face font-lock-string-face fontified t) 33 34 (fontified t rear-nonsticky t) 34 42 (fontified t) 42 43 (fontified t) 43 48 (face font-lock-string-face fontified t) 48 49 (face font-lock-string-face rear-nonsticky t fontified t) 49 50 (fontified t)) #("\"系统正常，待机中...\";" 0 12 (face font-lock-string-face fontified t) 12 13 (face font-lock-string-face fontified t rear-nonsticky t) 13 14 (fontified t rear-nonsticky t)) #(" \"系统空闲\"" 0 1 (c-in-sws t fontified t) 1 7 (face font-lock-string-face c-in-sws t fontified t)) #("SystemStatus_Idle" 0 17 (fontified t)) #("\"系统正常，待机中...\";" 0 12 (face font-lock-string-face fontified t) 12 13 (face font-lock-string-face fontified t rear-nonsticky t) 13 14 (fontified t rear-nonsticky t)) #(" \"一般系统错误，可以检测，检测结果可能受影响\"" 0 1 (c-in-sws t fontified t) 1 24 (face font-lock-string-face c-in-sws t fontified t)) #("SystemStatus_NormalWrong" 0 24 (fontified t)) #("\"系统正常，待机中...\";" 0 12 (face font-lock-string-face fontified t) 12 13 (face font-lock-string-face fontified t rear-nonsticky t) 13 14 (rear-nonsticky t fontified t)) #("\"严重系统错误，无法检测\"" 0 13 (face font-lock-string-face c-in-sws t fontified t)) #("SystemStatus_SeriousWrong" 0 25 (fontified t)) #(" \"系统正常，待机中...\";" 0 1 (fontified t) 1 13 (face font-lock-string-face fontified t) 13 14 (face font-lock-string-face fontified t rear-nonsticky t) 14 15 (rear-nonsticky t fontified t)) #(" \"检测中\"" 0 1 (c-in-sws t fontified t) 1 6 (face font-lock-string-face c-in-sws t fontified t)) #("SystemStatus_Det" 0 1 (category c-cpp-delimiter face font-lock-variable-name-face fontified t c-in-sws t) 1 16 (face font-lock-variable-name-face fontified t c-in-sws t)) #("QTest::newRow(\"SystemStatus_Normal\")<< 0 << \"系统正常，待机中...\";" 0 1 (face font-lock-constant-face fontified t) 1 5 (face font-lock-constant-face fontified t) 5 7 (fontified t) 7 13 (fontified t) 13 14 (fontified t) 14 15 (face font-lock-string-face fontified t) 15 33 (face font-lock-string-face fontified t) 33 34 (face font-lock-string-face rear-nonsticky t fontified t) 34 35 (face font-lock-string-face fontified t) 35 36 (rear-nonsticky t fontified t) 36 44 (fontified t) 44 56 (face font-lock-string-face fontified t) 56 57 (face font-lock-string-face rear-nonsticky t fontified t) 57 58 (fontified t)) #("        0" 0 9 (fontified t)) #("\"系统正常，待机中...\"" 0 13 (c-in-sws t face font-lock-string-face fontified t)) #("SystemStatus_Normal" 0 19 (fontified t)) #(" QTest::newRow(\"\")" 0 1 (c-in-sws t c-is-sws t fontified t) 1 2 (face font-lock-constant-face c-is-sws t fontified t) 2 6 (face font-lock-constant-face fontified t) 6 8 (fontified t) 8 14 (fontified t) 14 15 (fontified t) 15 16 (face font-lock-string-face fontified t) 16 17 (face font-lock-string-face fontified t) 17 18 (fontified t)) #(" SystemStatus_Normal        0
#define SystemStatus_Det           1
#define SystemStatus_SeriousWrong  2
#define SystemStatus_NormalWrong   3
#define SystemStatus_Idle          4
#define SystemStatus_Clean         5
" 0 1 (c-in-sws t fontified t) 1 20 (face font-lock-variable-name-face c-in-sws t fontified t) 20 29 (c-in-sws t fontified t) 29 30 (c-in-sws t fontified t category c-cpp-delimiter) 30 31 (face font-lock-preprocessor-face c-in-sws t c-is-sws t fontified t category c-cpp-delimiter) 31 37 (face font-lock-preprocessor-face c-in-sws t fontified t) 37 38 (c-in-sws t fontified t) 38 54 (face font-lock-variable-name-face c-in-sws t fontified t) 54 66 (c-in-sws t fontified t) 66 67 (c-in-sws t fontified t category c-cpp-delimiter) 67 68 (face font-lock-preprocessor-face c-in-sws t c-is-sws t fontified t category c-cpp-delimiter) 68 74 (face font-lock-preprocessor-face c-in-sws t fontified t) 74 75 (c-in-sws t fontified t) 75 100 (face font-lock-variable-name-face c-in-sws t fontified t) 100 103 (c-in-sws t fontified t) 103 104 (c-in-sws t fontified t category c-cpp-delimiter) 104 105 (face font-lock-preprocessor-face c-in-sws t c-is-sws t fontified t category c-cpp-delimiter) 105 111 (face font-lock-preprocessor-face c-in-sws t fontified t) 111 112 (c-in-sws t fontified t) 112 136 (face font-lock-variable-name-face c-in-sws t fontified t) 136 140 (c-in-sws t fontified t) 140 141 (c-in-sws t fontified t category c-cpp-delimiter) 141 142 (face font-lock-preprocessor-face c-in-sws t c-is-sws t fontified t category c-cpp-delimiter) 142 148 (face font-lock-preprocessor-face c-in-sws t fontified t) 148 149 (c-in-sws t fontified t) 149 166 (face font-lock-variable-name-face c-in-sws t fontified t) 166 177 (c-in-sws t fontified t) 177 178 (c-in-sws t fontified t category c-cpp-delimiter) 178 179 (face font-lock-preprocessor-face c-in-sws t c-is-sws t fontified t category c-cpp-delimiter) 179 185 (face font-lock-preprocessor-face c-in-sws t fontified t) 185 186 (c-in-sws t fontified t) 186 204 (face font-lock-variable-name-face c-in-sws t fontified t) 204 214 (c-in-sws t fontified t) 214 215 (c-in-sws t fontified t category c-cpp-delimiter)) #("RefreshCurrentSystemStatus" 0 26 (fontified t face font-lock-function-name-face)) #("testCase_RefreshCurrentSystemStatu" 0 34 (fontified t face font-lock-function-name-face)) #("(define-key c-mode-base-map [(tab)] 'my-indent-or-complete)
(define-key c-mode-base-map [(meta ?/)] 'semantic-ia-complete-symbol-menu)" 0 59 (fontified t) 59 60 (fontified t) 60 134 (fontified t)) #("QStr" 0 4 (fontified t)) "(global-set-key [(f5)] 'speedbar)" "(define-key c-mode-base-map [(tab)] 'my-indent-or-complete)
(define-key c-mode-base-map [(meta ?/)] 'semantic-ia-complete-symbol-menu)"))
