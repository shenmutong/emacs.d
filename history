;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(gud-gdb-history ido-buffer-history file-name-history query-replace-history minibuffer-history ido-file-history))
(setq gud-gdb-history '("gdb -i=mi tst_bsguiuinttsttest.cpp"))
(setq ido-buffer-history '("*gud-tst_bsguiuinttsttest.cpp*" "*w3m*"))
(setq file-name-history '("/home/mut/.emacs.d/snippets/c++-mode/QtUintTestAddNewTestCase2" "/home/mut/.emacs.d/snippets/c++-mode/QtUintTestAddNewTestCase" "/cygdrive/c/WorkSpace/WMProject-SVN/BlueSolutionProject/BSUI_CE/BSUI_CE/mainwindow.h" "/cygdrive/c/WorkSpace/WMProject-SVN/BlueSolutionProject/UintTest/BSGuiUintTst/tst_bsguiuinttsttest.cpp" "/home/mut/GTD/task.org" "/home/mut/.emacs.d/snippets/c++-mode/QtUintTestAddNewTestCase" "/cygdrive/c/WorkSpace/WMProject-SVN/BlueSolutionProject/UintTest/BSGuiUintTst/tst_bsguiuinttsttest.cpp" "/home/mut/GTD/task.org" "/cygdrive/c/WorkSpace/WMProject-SVN/BlueSolutionProject/BSUI_CE/BSUI_CE/mainwindow.h" "/home/mut/.emacs.d/lisp/init-cc-mode.el" "/home/mut/.emacs.d/init.el" "/cygdrive/c/WorkSpace/WMProject-SVN/BlueSolutionProject/BSUI_CE/BSUI_CE/mainwindow.cpp" "/cygdrive/c/WorkSpace/WMProject-SVN/BlueSolutionProject/UintTest/DesignDocuments/UintTestPlan.org" "/cygdrive/c/WorkSpace/WMProject-SVN/BlueSolutionProject/UintTest/DesignDocuments" "/cygdrive/c/WorkSpace/WMProject-SVN/BlueSolutionProject/refFiles/" "/home/mut/GTD/note.org" "/home/mut/GTD/finished.org" "/home/mut/GTD/task.html" "/home/mut/AWayToUp/.git/config" "/home/mut/AWayToUp/HigerMathematics.org" "/cygdrive/d/WorkSpace/GTD/.git/config" "/home/mut/.gitconfig" "/home/mut/.zshrc" "/cygdrive/d/WorkSpace/WM_BS_Project/BSDocument/TestRec.org" "/cygdrive/d/WorkSpace/GTD/task.org"))
(setq query-replace-history '("" "_"))
(setq minibuffer-history '("yas/reload-all" "yas/new-snippet" "gdb" "yas/reload-all" #("\\_<caseaddh\\_>" 3 11 (fontified t)) "yas/new-snippet" "recover-file" "c++-mode" "dired" "shell-mode" "shell" "w3m" "replace-string" "goto-line430"))
(setq ido-file-history '("QtUintTestAddNewTestCase1" "QtUintTestAddNewTestCase2" "QtUintTestAddNewTestCase" "mainwindow.h" "tst_bsguiuinttsttest.cpp" "task.org" "QtUintTestAddNewTestCase" "tst_bsguiuinttsttest.cpp" "task.org" "mainwindow.h" "init-cc-mode.el" "init.el" nil "." "mainwindow.cpp" "UintTestPlan.org" "DesignDocuments" "BSUintTest/" "note.org" "finished.org" "task.html" "config" "HigerMathematics.org" ".gitconfig" ".zshrc" "TestRec.org" "WorkFlow.txt"))
(setq search-ring 'nil)
(setq regexp-search-ring 'nil)
(setq kill-ring '(#("_data" 0 5 (fontified t face font-lock-function-name-face)) #("_data" 0 5 (fontified t face font-lock-function-name-face)) #("InitGraphParam" 0 14 (fontified t)) #("    void initTestCase_$1();
    void cleanupTestCase_$1();
    void testCase_$1($2,$3);
    void testCase_$1_data($2,$3);" 0 22 (fontified t) 22 23 (fontified t face font-lock-keyword-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t) 25 28 (fontified t) 28 53 (fontified t) 53 54 (fontified t face font-lock-keyword-face) 54 55 (fontified t face font-lock-string-face) 55 59 (fontified t) 59 77 (fontified t) 77 78 (fontified t face font-lock-keyword-face) 78 79 (fontified t face font-lock-string-face) 79 80 (fontified t) 80 81 (fontified t face font-lock-keyword-face) 81 82 (fontified t face font-lock-string-face) 82 83 (fontified t) 83 84 (fontified t face font-lock-keyword-face) 84 85 (rear-nonsticky t fontified t face font-lock-string-face) 85 86 (fontified t) 86 88 (fontified t) 88 105 (fontified t) 105 106 (fontified t) 106 107 (fontified t face font-lock-keyword-face) 107 108 (fontified t face font-lock-string-face) 108 113 (fontified t) 113 114 (fontified t) 114 115 (fontified t face font-lock-keyword-face) 115 116 (fontified t face font-lock-string-face) 116 117 (fontified t) 117 118 (fontified t face font-lock-keyword-face) 118 119 (rear-nonsticky t fontified t face font-lock-string-face) 119 120 (rear-nonsticky t fontified t) 120 121 (rear-nonsticky t fontified t)) #("caseadd1" 0 3 (fontified t face font-lock-comment-face) 3 8 (fontified t face font-lock-comment-face)) #("    void initTestCase_$1();
    void cleanupTestCase_$1();
    void testCase_$1($2,$3);
    void testCase_$1_data($2,$3);" 0 22 (fontified t) 22 23 (fontified t face font-lock-keyword-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t) 25 28 (fontified t) 28 53 (fontified t) 53 54 (fontified t face font-lock-keyword-face) 54 55 (fontified t face font-lock-string-face) 55 59 (fontified t) 59 77 (fontified t) 77 78 (fontified t face font-lock-keyword-face) 78 79 (fontified t face font-lock-string-face) 79 80 (fontified t) 80 81 (fontified t face font-lock-keyword-face) 81 82 (fontified t face font-lock-string-face) 82 83 (fontified t) 83 84 (fontified t face font-lock-keyword-face) 84 85 (fontified t rear-nonsticky t face font-lock-string-face) 85 86 (fontified t) 86 88 (fontified t) 88 105 (fontified t) 105 106 (fontified t) 106 107 (fontified t face font-lock-keyword-face) 107 108 (fontified t face font-lock-string-face) 108 113 (fontified t) 113 114 (fontified t) 114 115 (fontified t face font-lock-keyword-face) 115 116 (fontified t face font-lock-string-face) 116 117 (fontified t) 117 118 (fontified t face font-lock-keyword-face) 118 119 (rear-nonsticky t fontified t face font-lock-string-face) 119 120 (rear-nonsticky t fontified t) 120 121 (rear-nonsticky t fontified t)) #("($2,$3)" 0 1 (fontified t) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t) 4 5 (fontified t face font-lock-keyword-face) 5 6 (rear-nonsticky t fontified t face font-lock-string-face) 6 7 (fontified t rear-nonsticky t)) #("_$1($2,$3)" 0 1 (fontified t) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-string-face) 6 7 (fontified t) 7 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t rear-nonsticky t face font-lock-string-face) 9 10 (fontified t)) #("$2,$3" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-string-face) 2 3 (fontified t) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-string-face)) #("    void initTestCase_$1();
    void cleanupTestCase_$1();
    void testCase_$1();
    void testCase_data_$1();" 0 22 (fontified t) 22 23 (fontified t face font-lock-keyword-face) 23 24 (fontified t face font-lock-string-face) 24 53 (fontified t) 53 54 (fontified t face font-lock-keyword-face) 54 55 (fontified t face font-lock-string-face) 55 59 (fontified t) 59 77 (fontified t) 77 78 (fontified t face font-lock-keyword-face) 78 79 (fontified t face font-lock-string-face) 79 80 (fontified t) 80 81 (fontified t) 81 83 (fontified t) 83 106 (fontified t) 106 107 (fontified t face font-lock-keyword-face) 107 108 (fontified t face font-lock-string-face) 108 111 (fontified t)) #("StopContinousDet" 0 15 (fontified t) 15 16 (rear-nonsticky t fontified t)) #("StartContinousDet" 0 16 (fontified t face font-lock-type-face) 16 17 (rear-nonsticky t fontified t c-type c-decl-id-start face font-lock-type-face)) #("StopNormalDetClean" 0 17 (fontified t) 17 18 (rear-nonsticky t fontified t)) #("StopNormalDetClean" 0 17 (fontified t) 17 18 (rear-nonsticky t fontified t)) #("StopNormalDetClean" 0 17 (fontified t) 17 18 (rear-nonsticky t fontified t)) #("StopNormalDet" 0 12 (fontified t) 12 13 (fontified t rear-nonsticky t)) #("StopContinousDet" 0 16 (fontified t face font-lock-variable-name-face)) #("StartContinousDet" 0 17 (fontified t face font-lock-variable-name-face)) #("StopNormalDetClean" 0 18 (fontified t face font-lock-variable-name-face)) #("StopNormalDet" 0 13 (fontified t face font-lock-variable-name-face)) #("StartNormalDet" 0 14 (fontified t face font-lock-variable-name-face)) #("StopHSDet" 0 9 (fontified t face font-lock-variable-name-face)) #("StartHSDet" 0 10 (fontified t face font-lock-variable-name-face)) #("ApplySystemDetMode" 0 18 (fontified t face font-lock-variable-name-face)) #("RefreshAvaliableCommPortName" 0 28 (fontified t face font-lock-variable-name-face)) #("refreshFAIMSCoreParam" 0 21 (fontified t face font-lock-variable-name-face)) #(" resetDeviceParmFormWin(void);" 0 1 (fontified t c-in-sws t) 1 23 (fontified t c-in-sws t) 23 24 (fontified t c-in-sws t) 24 28 (fontified t c-in-sws t face font-lock-type-face) 28 30 (fontified t c-in-sws t))))
